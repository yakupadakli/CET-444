
@model IEnumerable<CollaborativeLearning.Entities.User>
@{
    ViewBag.Title = "Home Page";
}

@*@(Html.Kendo().Grid<CollaborativeLearning.Entities.User>()
    .Name("users")
    .Columns(columns =>
    {
        columns.Bound(p => p.FullName).Width(80);
        columns.Bound(p => p.Username).Width(50);
        columns.Bound(p => p.Email).Width(100);
        columns.Command(command => { command.Edit().Text("Düzenle"); command.Destroy().Text("Sil"); }).Width(80);
    })
        //.ToolBar(t=> t.Custom().Text("Yeni Kullanıcı Ekle").Action("_Register","Account"))
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
        .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(
        model =>
        {
            model.Id(p => p.UserId);
            model.Field(p => p.FullName);
            model.Field(p => p.Email);
            model.Field(p => p.Username);

        })
                .Create(update => update.Action("EditingPopup_Create", "Admin"))
                .Read(read => read.Action("EditingPopup_Read", "Admin"))
                .Update(update => update.Action("EditingPopup_Update", "Admin"))
                .Destroy(update => update.Action("EditingPopup_Destroy", "Admin"))
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>*@
@{ 
    
    IList<CollaborativeLearning.Entities.User> m = Model.ToList();
    foreach (var item in m)
    {
        @item.FirstName;
    }
    
}

<div id="clientsDb">
    @(Html.Kendo().Grid<CollaborativeLearning.Entities.Semester>()
        .Name("userssss")
        .Columns(columns =>
        {
            columns.Bound(c => c.semester).Width(140);
            columns.Bound(c => c.ID).Width(140);
        })
        .HtmlAttributes(new { style = "height: 380px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("Customers_Read", "Home"))
        )
    )
</div>

<style scoped>
    #clientsDb {
        width: 692px;
        height: 413px;
        margin: 30px auto;
        padding: 51px 4px 0 4px;
        background: url('@Url.Content("~/content/web/grid/clientsDb.png")') no-repeat 0 0;
    }
</style>
