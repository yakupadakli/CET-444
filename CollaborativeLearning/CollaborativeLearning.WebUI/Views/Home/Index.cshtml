@{
    ViewBag.Title = "Home Page";
}


<div id="forecast">
    @(Html.Kendo().TabStrip()
          .Name("tabstrip")
          .Items(tabstrip =>
          {
              tabstrip.Add().Text("Semester")
                  .Selected(true)
                  
                  .Content(@<text>
                    <div class="weather">
                         @Html.Action("_PartialGetSemesterGrid", "Semester")
                    </div>
                    <span class="rainy">&nbsp;</span>
                  </text>);

              tabstrip.Add().Text("Scenario")
                  .Content(@<text>
                    <div class="weather">
                        _PartialScenarioGrid Çağrılacak
                    </div>
                    <span class="sunny">&nbsp;</span>
                  </text>);

              tabstrip.Add().Text("Users")
                  .Content(@<text>
                    <div class="weather">
                        _PartialUsersGrid Çağrılacak
                    </div>
                    <span class="cloudy">&nbsp;</span>
                  </text>);

              tabstrip.Add().Text("Mentors")
                  .Content(@<text>
                    <div class="weather">
                        _PartialMentorsGrid Çağrılacak
                    </div>
                    <span class="rainy">&nbsp;</span>
                  </text>);
          })
    )


@helper Editorforo()
{
     @(Html.Kendo().Editor()
      .Name("editor")
      .HtmlAttributes(new { style = "width: 740px;height:440px" })
      .Value(@<text>
            <p>
               <img src="@Url.Content("~/content/web/editor/kendo-ui-web.png")" alt="Editor for ASP.NET MVC logo" style="display:block;margin-left:auto;margin-right:auto;" />
            </p>
            <p>
                Kendo UI Editor allows your users to edit HTML in a familiar, user-friendly way.<br />
                In this version, the Editor provides the core HTML editing engine, which includes basic text formatting, hyperlinks, lists,
                and image handling. The widget <strong>outputs identical HTML</strong> across all major browsers, follows
                accessibility standards and provides API for content manipulation.
            </p>
            <p>Features include:</p>
            <ul>
                <li>Text formatting &amp; alignment</li>
                <li>Bulleted and numbered lists</li>
                <li>Hyperlink and image dialogs</li>
                <li>Cross-browser support</li>
                <li>Identical HTML output across browsers</li>
                <li>Gracefully degrades to a <code>textarea</code> when JavaScript is turned off</li>
            </ul>
            <p>
                Read <a href="http://docs.telerik.com/kendo-ui">more details</a> or send us your
                <a href="http://www.telerik.com/forums">feedback</a>!
            </p>
      </text>)
.ImageBrowser(imageBrowser => imageBrowser
    .Image("~/Content/UserFiles/Images/{0}")    
    .Read("Read", "ImageBrowser")
    .Create("Create", "ImageBrowser")
    .Destroy("Destroy", "ImageBrowser")
    .Upload("Upload", "ImageBrowser")
    .Thumbnail("Thumbnail", "ImageBrowser"))
)    
}
</div>