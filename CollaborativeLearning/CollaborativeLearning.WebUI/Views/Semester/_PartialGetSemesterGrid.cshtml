
@model CollaborativeLearning.WebUI.Models.SemesterModels
@{
    ViewBag.Title = "Semester";
}
@(Html.Kendo().Grid<CollaborativeLearning.WebUI.Models.SemesterModels>()
    .Name("semesters")
    .Columns(columns =>
    {
        columns.Bound(s => s.Id).Hidden().HtmlAttributes(new { name="Id", Id="gridRowId" });
        columns.Bound(s => s.semesterName).Width(70);
        columns.Bound(s => s.StudentCount).Width(70);
        columns.Bound(s => s.MentorCount).Width(70);
        columns.Command(command => { command.Edit(); command.Destroy(); command.Custom("Select").Click("select"); }).Width(160);
    })
        //.ToolBar(t=> t.Custom().Text("Yeni Kullanıcı Ekle").Action("_Register","Account"))
    .ToolBar(toolbar => toolbar.Create())
    .Events(events => events.Save("save").DataBinding("dataBind").Change("onChange"))
    .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
    .Editable(editable => editable.Mode(Kendo.Mvc.UI.GridEditMode.PopUp).TemplateName("Semester"))
    .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:260px; width:600px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(4)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        
                .Create(update => update.Action("Semester_Create", "Semester"))
                .Read(read => read.Action("Semesters_Read", "Semester"))
                .Update(update => update.Action("Semester_Update", "Semester"))
                .Destroy(update => update.Action("Semester_Destroy", "Semester"))
    )
    
)

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>

<script type="text/javascript">

    var FullName = [];
    function dataBind(arg) {
        if (FullName != "" ) {
            $.each(arg.items, function (key, value) {
                value.semesterName = FullName[key];
            });
        }
        FullName = [];
    }
    
    function save(arg) {
       
        $.each(arg.sender._data, function (key, value) {
            value.semesterName = value.year + "-" + value.semester;
            FullName.push(value.semesterName);
        });
    }

    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            console.log($(item).find("#gridRowId"));

            return $(item).find("#gridRowId").val();
        });
    }
    function select(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        console.log(dataItem);
        alert(dataItem.Id);
        window.location.href = '@(Url.Action("Index","Semester"))?Id=' + dataItem.Id;
        

    }

</script>


<style scoped>
    #clientsDb {
        width: 692px;
        height: 413px;
        margin: 30px auto;
        padding: 51px 4px 0 4px;
        background: url('@Url.Content("~/content/web/grid/clientsDb.png")') no-repeat 0 0;
    }
</style>
